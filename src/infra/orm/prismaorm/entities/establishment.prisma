generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_ESTABLISHMENT")
}

enum EstablishmentType {
  USER
  ADMIN
}

model Establishment {
  id                   String            @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  email                String            @unique
  mobileNumber         String            @unique
  subsidiaries         Subsidiary[]
  password             String
  cnpj                 String
  type                 EstablishmentType @default(USER)
  validate_code        String?
  validate_expire_date DateTime?
  created_at           DateTime          @default(now())
  updated_at           DateTime          @default(now()) @updatedAt
  deleted_at           DateTime?
  RecoverCodes         RecoverCodes?
  twofactor_enabled    Boolean           @default(false)
  twofactor_secret     String?
  purchasesId          String?           @db.ObjectId
}

model RecoverCodes {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  token           String        @map("token")
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
  establishmentId String        @unique
  expires_at      DateTime
  is_blacklisted  Boolean       @default(false)
}

model Subsidiary {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  address           String
  addressNumber     Int
  addressComplement String?
  addressDistrict   String
  products          Products[]
  city              String
  state             String
  cep               String
  establishment     Establishment @relation(fields: [establishmentId], references: [id], onDelete: Cascade)
  establishmentId   String        @unique
  Purchases         Sales?
}

model Sales {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  productId      String
  subsidiary     Subsidiary      @relation(fields: [subsidiaryId], references: [id], onDelete: Cascade)
  subsidiaryId   String          @unique
  quantity       Int
  price          Float
  scheduled_date DateTime
  is_finished    Boolean         @default(false)
  delivered_date DateTime
  is_delivered   Boolean         @default(false)
}

type Products {
  id    String
  name  String
  stock Int
  value Float
  photo String
}
